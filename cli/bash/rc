# vi: ft=bash
# shellcheck shell=bash disable=SC1090

function prepend_path {
  case ":$PATH:" in
    *:"$1":*) ;;
    *) export PATH="$1:$PATH";;
  esac
}

prepend_path ~/'.venv/bin'
prepend_path ~/'.pnpm-global/node_modules/.bin'
prepend_path ~/'.cabal/bin'
prepend_path ~/'.ghcup/bin'
prepend_path ~/'.local/bin'

#. ~/'dotfiles/cli/bash/bashrc.d/ps1.sh'
. ~/'dotfiles/cli/bash/bashrc.d/alias.sh'
#. ~/'dotfiles/cli/bash/bashrc.d/dbus.sh'
. ~/'.cargo/env'
. <(opam env)
. <(starship init --print-full-init 'bash')
. <(luarocks path)
. <(stack --bash-completion-script 'stack')


export GPG_TTY="$(tty)"
export EDITOR='nvim'

function spawn {
  nohup "$@" > '/dev/null' 2> '/dev/null' &
}

function run-cpp {
  local tmp="${XDG_RUNTIME_DIR:-'/tmp'}/ks-run-cpp"
  local exe="$tmp/${1%'.cpp'}"
  mkdir -p "$tmp"

  echo $'\e[36;1mcompiling '"${1@Q}"$'…\e[m'
  if clang++ -o "$exe" -g \
    -Werror -Wall -Wextra -Wconversion \
    "$1"; then
    echo $'\e[32;1mcompilation success! running…\e[m'
    "$exe"
  else
    echo $'\e[31;1mcompilation failed!\e[m'
  fi
}
